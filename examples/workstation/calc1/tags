!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BIN_DIR	Makefile	/^BIN_DIR := build$/;"	m
BIN_DIR	Makefile	/^BIN_DIR := build_rel$/;"	m
BIN_DIR	Makefile	/^BIN_DIR := build_spy$/;"	m
BSP_H	bsp.h	35;"	d
BSP_clear	bsp.c	/^void BSP_clear(void) {$/;"	f
BSP_display	bsp.c	/^void BSP_display(double value) {$/;"	f
BSP_display_error	bsp.c	/^void BSP_display_error(char const *err) {$/;"	f
BSP_exit	bsp.c	/^void BSP_exit(void) {$/;"	f
BSP_get_value	bsp.c	/^double BSP_get_value(void) {$/;"	f
BSP_insert	bsp.c	/^void BSP_insert(int keyId) {$/;"	f
BSP_message	bsp.c	/^void BSP_message(char const *msg) {$/;"	f
BSP_negate	bsp.c	/^void BSP_negate(void) {$/;"	f
BSP_show_display	bsp.c	/^void BSP_show_display(void) {$/;"	f
CALC1_H	calc1.h	20;"	d
CC	Makefile	/^CC    := gcc$/;"	m
CE_SIG	calc1.h	/^    CE_SIG,$/;"	e	enum:CalcSignals
CFLAGS	Makefile	/^CFLAGS  = -c -O3 -fno-pie -std=c11 -pedantic -Wall -Wextra -W \\$/;"	m
CFLAGS	Makefile	/^CFLAGS  = -c -g -O -fno-pie -std=c11 -pedantic -Wall -Wextra -W \\$/;"	m
CONF	Makefile	/^	CONF := dbg$/;"	m
CPP	Makefile	/^CPP   := g++$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = -c -O3 -fno-pie -std=c++11 -pedantic -Wall -Wextra \\$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = -c -g -O -fno-pie -std=c++11 -pedantic -Wall -Wextra \\$/;"	m
CPP_DEPS_EXT	Makefile	/^CPP_DEPS_EXT := $(patsubst %.o,%.d, $(CPP_OBJS_EXT))$/;"	m
CPP_OBJS	Makefile	/^CPP_OBJS     := $(patsubst %.cpp,%.o, $(CPP_SRCS))$/;"	m
CPP_OBJS_EXT	Makefile	/^CPP_OBJS_EXT := $(addprefix $(BIN_DIR)\/, $(CPP_OBJS))$/;"	m
CPP_SRCS	Makefile	/^CPP_SRCS :=$/;"	m
C_DEPS_EXT	Makefile	/^C_DEPS_EXT   := $(patsubst %.o,%.d, $(C_OBJS_EXT))$/;"	m
C_OBJS	Makefile	/^C_OBJS       := $(patsubst %.c,%.o,   $(C_SRCS))$/;"	m
C_OBJS_EXT	Makefile	/^C_OBJS_EXT   := $(addprefix $(BIN_DIR)\/, $(C_OBJS))$/;"	m
C_SIG	calc1.h	/^    C_SIG = Q_USER_SIG,$/;"	e	enum:CalcSignals
C_SRCS	Makefile	/^C_SRCS := \\$/;"	m
Calc	calc1.c	/^typedef struct Calc {$/;"	s	file:
Calc	calc1.c	/^} Calc;$/;"	t	typeref:struct:Calc	file:
CalcEvt	calc1.h	/^} CalcEvt;$/;"	t	typeref:struct:__anon1
CalcSignals	calc1.h	/^enum CalcSignals {$/;"	g
Calc_begin	calc1.c	/^static QState Calc_begin(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_ctor	calc1.c	/^void Calc_ctor(void) {$/;"	f
Calc_error	calc1.c	/^static QState Calc_error(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_eval	calc1.c	/^static bool Calc_eval(Calc * const me, double op, uint8_t oper) {$/;"	f	file:
Calc_final	calc1.c	/^static QState Calc_final(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_frac1	calc1.c	/^static QState Calc_frac1(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_frac2	calc1.c	/^static QState Calc_frac2(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_initial	calc1.c	/^static QState Calc_initial(Calc * const me, void const * const par) {$/;"	f	file:
Calc_inst	calc1.c	/^Calc Calc_inst;$/;"	v
Calc_int1	calc1.c	/^static QState Calc_int1(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_int2	calc1.c	/^static QState Calc_int2(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_negated1	calc1.c	/^static QState Calc_negated1(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_negated2	calc1.c	/^static QState Calc_negated2(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_on	calc1.c	/^static QState Calc_on(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_opEntered	calc1.c	/^static QState Calc_opEntered(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_operand1	calc1.c	/^static QState Calc_operand1(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_operand2	calc1.c	/^static QState Calc_operand2(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_ready	calc1.c	/^static QState Calc_ready(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_result	calc1.c	/^static QState Calc_result(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_zero1	calc1.c	/^static QState Calc_zero1(Calc * const me, QEvt const * const e) {$/;"	f	file:
Calc_zero2	calc1.c	/^static QState Calc_zero2(Calc * const me, QEvt const * const e) {$/;"	f	file:
DEFINES	Makefile	/^DEFINES   := -DQP_API_VERSION=9999$/;"	m
DIGIT_0_SIG	calc1.h	/^    DIGIT_0_SIG,$/;"	e	enum:CalcSignals
DIGIT_1_9_SIG	calc1.h	/^    DIGIT_1_9_SIG,$/;"	e	enum:CalcSignals
DISP_WIDTH	bsp.c	40;"	d	file:
EQUALS_SIG	calc1.h	/^    EQUALS_SIG,$/;"	e	enum:CalcSignals
INCLUDES	Makefile	/^INCLUDES := -I. \\$/;"	m
KEY_DIVIDE	calc1.c	29;"	d	file:
KEY_MINUS	calc1.c	27;"	d	file:
KEY_MULT	calc1.c	28;"	d	file:
KEY_NULL	calc1.c	25;"	d	file:
KEY_PLUS	calc1.c	26;"	d	file:
LIBS	Makefile	/^LIBS      :=$/;"	m
LIB_DIRS	Makefile	/^LIB_DIRS  :=$/;"	m
LINK	Makefile	/^LINK  := gcc    # for C programs$/;"	m
LINKFLAGS	Makefile	/^	LINKFLAGS := -no-pie$/;"	m
MKDIR	Makefile	/^	MKDIR      := mkdir -p$/;"	m
MKDIR	Makefile	/^	MKDIR      := mkdir$/;"	m
OFF_SIG	calc1.h	/^    OFF_SIG$/;"	e	enum:CalcSignals
OPER_SIG	calc1.h	/^    OPER_SIG,$/;"	e	enum:CalcSignals
POINT_SIG	calc1.h	/^    POINT_SIG,$/;"	e	enum:CalcSignals
PROJECT	Makefile	/^PROJECT := calc1$/;"	m
QF_onCleanup	bsp.c	/^void QF_onCleanup(void) {$/;"	f
QF_onClockTick	bsp.c	/^void QF_onClockTick(void) {$/;"	f
QF_onStartup	bsp.c	/^void QF_onStartup(void) {$/;"	f
QPC	Makefile	/^QPC := ..\/..\/..$/;"	m
QP_PORT_DIR	Makefile	/^QP_PORT_DIR := $(QPC)\/ports\/posix-qv$/;"	m
QP_PORT_DIR	Makefile	/^QP_PORT_DIR := $(QPC)\/ports\/win32-qv$/;"	m
QS_SRCS	Makefile	/^QS_SRCS := \\$/;"	m
Q_onAssert	bsp.c	/^Q_NORETURN Q_onAssert(char const * const module, int_t const loc) {$/;"	f
RM	Makefile	/^	RM         := rm -f$/;"	m
RM	Makefile	/^	RM         := rm$/;"	m
STRINGIFY	bsp.c	44;"	d	file:
TARGET_EXE	Makefile	/^TARGET_EXE   := $(BIN_DIR)\/$(PROJECT)$(TARGET_EXT)$/;"	m
TARGET_EXT	Makefile	/^	TARGET_EXT := .exe$/;"	m
TARGET_EXT	Makefile	/^	TARGET_EXT :=$/;"	m
VAL	bsp.c	43;"	d	file:
VPATH	Makefile	/^VPATH := . \\$/;"	m
key_code	calc1.h	/^    uint8_t key_code;$/;"	m	struct:__anon1
l_display	bsp.c	/^static char l_display[DISP_WIDTH + 1]; \/* the calculator display *\/$/;"	v	file:
l_len	bsp.c	/^static int  l_len;  \/* number of displayed characters *\/$/;"	v	file:
main	main.c	/^int main() {$/;"	f
op1	calc1.c	/^    double op1;$/;"	m	struct:Calc	file:
op2	calc1.c	/^    double op2;$/;"	m	struct:Calc	file:
oper1	calc1.c	/^    uint8_t oper1;$/;"	m	struct:Calc	file:
oper2	calc1.c	/^    uint8_t oper2;$/;"	m	struct:Calc	file:
super	calc1.c	/^    QHsm super;$/;"	m	struct:Calc	file:
super	calc1.h	/^    QEvt super;$/;"	m	struct:__anon1
the_calc	calc1.c	/^QHsm * const the_calc = &Calc_inst.super;$/;"	v
